<h2>Overview</h2>
By the end of this article you should be able to answer the following questions:

[accordion]
[toggle title="How many different types of clocks exists on your machine and what are they called?"]
There are 2 types:
- Hardware clock
- System clock
</ul>
[/toggle]
[toggle title="What is the command to install the ntp service?"]
$ yum install chrony
[/toggle]
[toggle title="What is ntp's main config file?"]
/etc/chrony.conf   # the only thing you might need
                   # to update here are the ntp servers.
[/toggle]
[toggle title="What is the command to check the NTP service's status?"]
$ systemctl status chronyd.service
[/toggle]
[toggle title="What is command to view all your time related settings, e.g. current time, timezone, whether ntp is enabled, daylight saving time....etc?"]
$ timedatectl status
[/toggle]
[toggle title="What is the command to enable ntp?"]
$ timedatectl set-ntp true
[/toggle]
[toggle title="What is the command to view a list of ntp servers that your machine is using?"]
$ chronyc sources -v
[/toggle]
[toggle title="What is the command to do a manual ntp sync?"]
$ systemctl restart chronyd
[/toggle]
[toggle title="What is the command to check how effectively our ntp syncing is working?"]
$ chronyc tracking
[/toggle]
[toggle title="What is the command to update your hardware clock?"]
$ hwclock --systohc
[/toggle]
[/accordion]

<hr/>



<h2>Install ntp</h2>
Here's the command you need to run:

<pre>
$ yum install chrony
</pre>

There are two main clocks in your machine:

<ul>
	<li><strong>hardware clock</strong> - This clock is operated on your machine's motherboard</li>
	<li><strong>system-clock (aka system-time)</strong> - You'r operating system's clock</li>
</ul>


So when you start your machine, the first clock that your machine uses for timekeeping is the hardware clock, while the OS is booting up, the system-clock set's gets it's time from the hardware-clock. After that the system-clock's time get's maintained by the OS.

After the machine has been booted, you can then change the system-clock's time manually by using the <strong>timedatectl</strong> command:

<pre>
$ date
Tue 23 Jun 02:32:32 BST 2015

$ timedatectl set-time 04:00

$ date
Tue 23 Jun 04:00:02 BST 2015
</pre>

You can also use timedatectl to instruct your OS to accurately maintain the correct time by keeping it's time in sync with a another trusted remote "ntp" server. This is done by running the following command:

<pre>
$ timedatectl set-ntp yes
</pre>


We can view a list of trusted ntp servers that the chronyd is using to sync the system-time. You can view this list using the <strong>chronyc</strong> command:

<pre>
$ chronyc sources -v
210 Number of sources = 4

  .-- Source mode  '^' = server, '=' = peer, '#' = local clock.
 / .- Source state '*' = current synced, '+' = combined , '-' = not combined,
| /   '?' = unreachable, 'x' = time may be in error, '~' = time too variable.
||                                                 .- xxxx [ yyyy ] +/- zzzz
||                                                /   xxxx = adjusted offset,
||         Log2(Polling interval) -.             |    yyyy = measured offset,
||                                  \            |    zzzz = estimated error.
||                                   |           |
MS Name/IP address         Stratum Poll Reach LastRx Last sample
===============================================================================
^? ns1.tomhek.net                3   9   377   208   -607us[ -607us] +/-   91ms
^+ ntp1.mediamatic.nl            2  10   377   399   +446us[ +446us] +/-   44ms
^* metronoom.dmz.cs.uu.nl        1   9   377   976   -298us[ -335us] +/-   22ms
^- mirror.muntinternet.net       2  10   377   126   +318us[ +318us] +/-   65ms

</pre>


The asterisk indicates the what our machine is currently using as the primary server. The primary NTP server can change every few minutes based on an algorithm that chronyd users.

To get more info about our ntp status, we run:

<pre>
$ chronyc tracking
Reference ID    : 213.136.0.252 (ntp4.bit.nl)
Stratum         : 2
Ref time (UTC)  : Sun Oct  4 16:13:07 2015
System time     : 0.001208134 seconds fast of NTP time
Last offset     : 0.002128782 seconds
RMS offset      : 0.003163246 seconds
Frequency       : 500.079 ppm fast
Residual freq   : 7.099 ppm
Skew            : 37.938 ppm
Root delay      : 0.038595 seconds
Root dispersion : 0.000447 seconds
Update interval : 64.3 seconds
Leap status     : Normal

</pre>

This shows how effectively our ntp service is working to keep the time in sync with the remote ntp server.

The main config file for our chronyd service is:


<pre>
$ cat /etc/chrony.conf
# Use public servers from the pool.ntp.org project.
# Please consider joining the pool (http://www.pool.ntp.org/join.html).
<strong>
server 0.centos.pool.ntp.org iburst
server 1.centos.pool.ntp.org iburst
server 2.centos.pool.ntp.org iburst
server 3.centos.pool.ntp.org iburst
</strong>
# Ignore stratum in source selection.
stratumweight 0

# Record the rate at which the system clock gains/losses time.
driftfile /var/lib/chrony/drift

# Enable kernel RTC synchronization.
rtcsync

# In first three updates step the system clock instead of slew
# if the adjustment is larger than 10 seconds.
makestep 10 3

# Allow NTP client access from local network.
#allow 192.168/16

# Listen for commands only on localhost.
bindcmdaddress 127.0.0.1
bindcmdaddress ::1

# Serve time even if not synchronized to any NTP server.
#local stratum 10

keyfile /etc/chrony.keys

# Specify the key used as password for chronyc.
commandkey 1

# Generate command key if missing.
generatecommandkey

# Disable logging of client accesses.
noclientlog

# Send a message to syslog if a clock adjustment is larger than 0.5 seconds.
logchange 0.5

logdir /var/log/chrony
#log measurements statistics tracking
</pre>

The important of this file are the server settings. These servers, e.g. 0.centos.pool.ntp.org are not remote ntp servers. Instead they are servers that gives the chronyd a list of available ntp remote servers that it can use (a bit like how yum mirrors work). You can edit this file directly and then just restart the chronyd service to load in the changes.



If you want to do a manual time resync, you can simply do this by restarting the ntp service:


<pre>
$ systemctl restart chronyd
</pre>




If your system clock is correct, but your hardware-clock is wrong, then you can update the hardware clock using the <strong>hwclock</strong> command:

<pre>
$ hwclock --help

Usage:
 hwclock [function] [option...]

Functions:
 -h, --help           show this help text and exit
 -r, --show           read hardware clock and print result
     --set            set the RTC to the time given with --date
 -s, --hctosys        set the system time from the hardware clock
 -w, --systohc        set the hardware clock from the current system time
     --systz          set the system time based on the current timezone
     --adjust         adjust the RTC to account for systematic drift since
                        the clock was last set or adjusted
 -c, --compare        periodically compare the system clock with the CMOS clock
     --getepoch       print out the kernel's hardware clock epoch value
     --setepoch       set the kernel's hardware clock epoch value to the
                        value given with --epoch
     --predict        predict RTC reading at time given with --date
 -V, --version        display version information and exit

Options:
 -u, --utc            the hardware clock is kept in UTC
     --localtime      the hardware clock is kept in local time
 -f, --rtc <file>     special /dev/... file to use instead of default
     --directisa      access the ISA bus directly instead of /dev/rtc
     --badyear        ignore RTC's year because the BIOS is broken
     --date <time>    specifies the time to which to set the hardware clock
     --epoch <year>   specifies the year which is the beginning of the
                        hardware clock's epoch value
     --noadjfile      do not access /etc/adjtime; this requires the use of
                        either --utc or --localtime
     --adjfile <file> specifies the path to the adjust file;
                        the default is /etc/adjtime
     --test           do not update anything, just show what would happen
 -D, --debug          debugging mode

</pre>

Based on this info, you would need to run:


<pre>
$ hwclock --systohc
</pre>




<h2>The "timedatectl" command</h2>

The <strong>timedatectl</strong> command can actually do a lot of things,




<pre>
$ timedatectl --help
timedatectl [OPTIONS...] COMMAND ...

Query or change system time and date settings.

  -h --help              Show this help
     --version           Show package version
     --adjust-system-clock
                         Adjust system clock when changing local RTC mode
     --no-pager          Do not pipe output into a pager
  -P --privileged        Acquire privileges before execution
     --no-ask-password   Do not prompt for password
  -H --host=[USER@]HOST  Operate on remote host

Commands:
  status                 Show current time settings
  set-time TIME          Set system time
  set-timezone ZONE      Set system timezone
  list-timezones         Show known timezones
  set-local-rtc BOOL     Control whether RTC is in local time
  set-ntp BOOL           Control whether NTP is enabled
</pre>



So let's try the status command:


<pre>
$  timedatectl status
      Local time: Tue 2015-06-23 04:28:07 BST
  Universal time: Tue 2015-06-23 03:28:07 UTC
        RTC time: Tue 2015-06-23 03:28:03
        Timezone: Europe/London (BST, +0100)
     NTP enabled: yes
NTP synchronized: yes
 RTC in local TZ: no
      DST active: yes
 Last DST change: DST began at
                  Sun 2015-03-29 00:59:59 GMT
                  Sun 2015-03-29 02:00:00 BST
 Next DST change: DST ends (the clock jumps one hour backwards) at
                  Sun 2015-10-25 01:59:59 BST
                  Sun 2015-10-25 01:00:00 GMT
</pre>



Note when you do either:


<pre>
$ timedatectl set-ntp true
</pre>

or

<pre>
$ timedatectl set-ntp false
</pre>

then behind the scenes it will end up starting/stopping the <strong>chronyd</strong> service:


<pre>
$ systemctl status chronyd
chronyd.service - NTP client/server
   Loaded: loaded (/usr/lib/systemd/system/chronyd.service; enabled)
   Active: active (running) since Tue 2015-06-23 04:31:35 BST; 2 days ago
  Process: 9562 ExecStartPost=/usr/libexec/chrony-helper add-dhclient-servers (code=exited, status=0/SUCCESS)
  Process: 9556 ExecStart=/usr/sbin/chronyd -u chrony $OPTIONS (code=exited, status=0/SUCCESS)
 Main PID: 9560 (chronyd)
   CGroup: /system.slice/chronyd.service
           └─9560 /usr/sbin/chronyd -u chrony

Jun 23 04:31:35 localhost.localdomain chronyd[9560]: chronyd version 1.29.1 starting
Jun 23 04:31:35 localhost.localdomain chronyd[9560]: Linux kernel major=3 minor=10 patch=0
Jun 23 04:31:35 localhost.localdomain chronyd[9560]: hz=100 shift_hz=7 freq_scale=1.00000000 nominal_tick=10000 slew_delta_t...pll=2
Jun 23 04:31:35 localhost.localdomain chronyd[9560]: Frequency -9.935 +/- 3.661 ppm read from /var/lib/chrony/drift
Jun 23 04:31:35 localhost.localdomain systemd[1]: Started NTP client/server.
Jun 23 04:31:42 localhost.localdomain chronyd[9560]: Selected source 84.245.25.222
Jun 23 04:31:42 localhost.localdomain chronyd[9560]: System clock wrong by 227763.759989 seconds, adjustment started
Jun 25 19:47:46 localhost.localdomain chronyd[9560]: System clock was stepped by 227763.760 seconds
Jun 25 19:48:52 localhost.localdomain chronyd[9560]: Selected source 194.171.167.130
Hint: Some lines were ellipsized, use -l to show in full.
</pre>


The chronyd service has it's own config file is:



<pre>
$ cat /etc/chrony.conf
# Use public servers from the pool.ntp.org project.
# Please consider joining the pool (http://www.pool.ntp.org/join.html).
server 0.centos.pool.ntp.org iburst
server 1.centos.pool.ntp.org iburst
server 2.centos.pool.ntp.org iburst
server 3.centos.pool.ntp.org iburst

# Ignore stratum in source selection.
stratumweight 0

# Record the rate at which the system clock gains/losses time.
driftfile /var/lib/chrony/drift

# Enable kernel RTC synchronization.
rtcsync

# In first three updates step the system clock instead of slew
# if the adjustment is larger than 10 seconds.
makestep 10 3

# Allow NTP client access from local network.
#allow 192.168/16

# Listen for commands only on localhost.
bindcmdaddress 127.0.0.1
bindcmdaddress ::1

# Serve time even if not synchronized to any NTP server.
#local stratum 10

keyfile /etc/chrony.keys

# Specify the key used as password for chronyc.
commandkey 1

# Generate command key if missing.
generatecommandkey

# Disable logging of client accesses.
noclientlog

# Send a message to syslog if a clock adjustment is larger than 0.5 seconds.
logchange 0.5

logdir /var/log/chrony
#log measurements statistics tracking

</pre>

But's it's unlikely you need to make any changes on this file, since the main way to configure your system clock is by using the <strong>timedatectl</strong> command. The only thing you may need to configure here is adding/removing ntp servers.
